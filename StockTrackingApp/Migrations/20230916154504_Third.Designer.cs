// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockTrackingApp.Context;

#nullable disable

namespace StockTrackingApp.Migrations
{
    [DbContext(typeof(StockDbContext))]
    [Migration("20230916154504_Third")]
    partial class Third
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StockTrackingApp.Data.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Female"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Male"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kids"
                        });
                });

            modelBuilder.Entity("StockTrackingApp.Data.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Karen",
                            Surname = "Benes"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Fatma",
                            Surname = "Aydoğ"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Aysecik",
                            Surname = "Meral"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Doruk",
                            Surname = "Erdemir"
                        });
                });

            modelBuilder.Entity("StockTrackingApp.Data.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Mango",
                            CategoryID = 1,
                            Price = 150m,
                            ProductName = "T-shirt",
                            Quantity = 300
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Mango",
                            CategoryID = 2,
                            Price = 150m,
                            ProductName = "T-shirt",
                            Quantity = 300
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Mango",
                            CategoryID = 2,
                            Price = 750m,
                            ProductName = "Jeans",
                            Quantity = 150
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Mango",
                            CategoryID = 1,
                            Price = 750m,
                            ProductName = "Jeans",
                            Quantity = 250
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Mango",
                            CategoryID = 3,
                            Price = 250m,
                            ProductName = "Dress",
                            Quantity = 50
                        },
                        new
                        {
                            Id = 6,
                            Brand = "Mango",
                            CategoryID = 1,
                            Price = 1000m,
                            ProductName = "Dress",
                            Quantity = 100
                        });
                });

            modelBuilder.Entity("StockTrackingApp.Data.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ProductId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("StockTrackingApp.Data.Product", b =>
                {
                    b.HasOne("StockTrackingApp.Data.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("StockTrackingApp.Data.Sale", b =>
                {
                    b.HasOne("StockTrackingApp.Data.Client", "Client")
                        .WithMany("Sales")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockTrackingApp.Data.Product", "Product")
                        .WithMany("Sales")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("StockTrackingApp.Data.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("StockTrackingApp.Data.Client", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("StockTrackingApp.Data.Product", b =>
                {
                    b.Navigation("Sales");
                });
#pragma warning restore 612, 618
        }
    }
}
